{{ $bucketRoot := or ($.Values.bucketRoot) ($.Values.mountPath) }}
apiVersion: {{ template "minio-nfs.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "minio-nfs.fullname" . }}
  labels:
    app: {{ template "minio-nfs.name" . }}
    chart: {{ template "minio-nfs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | trimSuffix "\n" | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | trimSuffix "\n" | indent 4 }}
{{- end }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  replicas: {{ .Values.nasgateway.replicas }}
  selector:
    matchLabels:
      app: {{ template "minio-nfs.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "minio-nfs.fullname" . }}
      labels:
        app: {{ template "minio-nfs.name" . }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | trimSuffix "\n" | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ include "minio-nfs.serviceAccountName" . | quote }}
      containers:
        - name: {{ .Chart.Name }}
          image: "docker.io/minio/minio:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          command:
            - '/bin/sh'
            - '-ce'
            - "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ gateway nas {{ $bucketRoot }} {{- template "minio-nfs.extraArgs" . }}"
          volumeMounts:
            - name: export
              mountPath: {{ .Values.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: "{{ .Values.persistence.subPath }}"
              {{- end }}
            - name: minio-user
              mountPath: "/etc/credentials"
              readOnly: true
          ports:
            - name: http
              containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "minio-nfs.secretName" . }}
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "minio-nfs.secretName" . }}
                  key: secretkey
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
        - name: export
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "minio-nfs.fullname" .) }}
        - name: minio-user
          secret:
            secretName: {{ template "minio-nfs.secretName" . }}
